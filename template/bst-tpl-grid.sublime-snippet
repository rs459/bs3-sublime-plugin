<snippet>
	<content><![CDATA[
<snippet>
	<content><![CDATA[extend layout

block append css
	style.
		.container {
			padding-left: 15px;
			padding-right: 15px;
		}

		h4 {
			margin-top: 25px;
		}
		.row {
			margin-bottom: 20px;
		}
		.row .row {
			margin-top: 10px;
			margin-bottom: 0;
		}
		[class*="col-"] {
			padding-top: 15px;
			padding-bottom: 15px;
			background-color: #eee;
			border: 1px solid #ddd;
			background-color: rgba(86,61,124,.15);
			border: 1px solid rgba(86,61,124,.2);
		}

		hr {
			margin-top: 40px;
			margin-bottom: 40px;
		}

block main
	.container
		.page-header
			h1 Bootstrap grid examples
			p.lead
			| Basic grid layouts to get you familiar with building within the Bootstrap grid system.
		h3 Three equal columns
		p
			| Get three equal-width columns
			strong starting at desktops and scaling to large desktops
			| . On mobile devices, tablets and below, the columns will automatically stack.
		.row
			.col-md-4 .col-md-4
			.col-md-4 .col-md-4
			.col-md-4 .col-md-4
		h3 Three unequal columns
		p
			| Get three columns
			strong starting at desktops and scaling to large desktops
			| of various widths. Remember, grid columns should add up to twelve for a single horizontal block. More than that, and columns start stacking no matter the viewport.
		.row
			.col-md-3 .col-md-3
			.col-md-6 .col-md-6
			.col-md-3 .col-md-3
		h3 Two columns
		p
			| Get two columns
			strong starting at desktops and scaling to large desktops
			| .
		.row
			.col-md-8 .col-md-8
			.col-md-4 .col-md-4
		h3 Full width, single column
		p.text-warning No grid classes are necessary for full-width elements.
		hr
		h3 Two columns with two nested columns
		p
			| Per the documentation, nesting is easyâ€”just put a row of columns within an existing row. This gives you two columns
			strong starting at desktops and scaling to large desktops
			| , with another two (equal widths) within the larger column.
		p
			| At mobile device sizes, tablets and down, these columns and their nested columns will stack.
		.row
			.col-md-8
				| .col-md-8
				.row
					.col-md-6 .col-md-6
					.col-md-6 .col-md-6
			.col-md-4 .col-md-4
		hr
		h3 Mixed: mobile and desktop
		p
			| The Bootstrap 3 grid system has four tiers of classes: xs (phones), sm (tablets), md (desktops), and lg (larger desktops). You can use nearly any combination of these classes to create more dynamic and flexible layouts.
		p
			| Each tier of classes scales up, meaning if you plan on setting the same widths for xs and sm, you only need to specify xs.
		.row
			.col-xs-12.col-md-8 .col-xs-12 .col-md-8
			.col-xs-6.col-md-4 .col-xs-6 .col-md-4
		.row
			.col-xs-6.col-md-4 .col-xs-6 .col-md-4
			.col-xs-6.col-md-4 .col-xs-6 .col-md-4
			.col-xs-6.col-md-4 .col-xs-6 .col-md-4
		.row
			.col-xs-6.col-md-6 .col-xs-6 .col-md-6
			.col-xs-6.col-md-6 .col-xs-6 .col-md-6
		hr
		h3 Mixed: mobile, tablet, and desktop
		p
		.row
			.col-xs-12.col-sm-8.col-lg-8 .col-xs-12 .col-lg-8
			.col-xs-6.col-sm-4.col-lg-4 .col-xs-6 .col-lg-4
		.row
			.col-xs-6.col-sm-4.col-lg-4 .col-xs-6 .col-sm-4 .col-lg-4
			.col-xs-6.col-sm-4.col-lg-4 .col-xs-6 .col-sm-4 .col-lg-4
			.col-xs-6.col-sm-4.col-lg-4 .col-xs-6 .col-sm-4 .col-lg-4
		.row
			.col-xs-6.col-sm-6.col-lg-6 .col-xs-6 .col-sm-6 .col-lg-6
			.col-xs-6.col-sm-6.col-lg-6 .col-xs-6 .col-sm-6 .col-lg-6
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>bst-tpl-grid</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>entity.name.tag.jade</scope>
</snippet>